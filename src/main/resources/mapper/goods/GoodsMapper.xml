<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty4u.backend.goods.query.mapper.GoodsQueryMapper">
<!--    조건별 상품 조회 -->
    <select id="findGoods" resultType="GoodsQueryDTO">
        SELECT
            g.goods_code,
            g.goods_name,
            b.brand_name,
            g.goods_skintype,
            g.goods_price
        FROM goods g
        JOIN brand b ON (g.brand_code = b.brand_code)
        <where>
            <if test="brandCode != null and brandCode != ''">
                AND b.brand_code = #{brandCode}
            </if>
            <if test="goodsName != null and goodsName != ''">
                AND g.goods_name LIKE CONCAT('%', #{goodsName}, '%')
            </if>
        </where>
        ORDER BY g.created_date
    </select>

<!--    브랜드 목록 조회 -->
    <select id="findAllBrand" resultType="BrandQueryDTO">
        SELECT
            brand_code,
            brand_name
        FROM brand
        ORDER BY brand_name
    </select>

<!--    선택 브랜드 내 상품 목록 조회 -->
    <select id="findAllBrandGoods" resultType="GoodsQueryDTO">
        SELECT
        g.goods_code,
        g.goods_name,
        b.brand_name,
        g.goods_skintype,
        g.goods_price
        FROM goods g
        JOIN brand b ON (g.brand_code = b.brand_code)
        <where>
            <if test="brandCode != null and brandCode != ''">
                AND b.brand_code = #{brandCode}
            </if>
        </where>
        ORDER BY g.created_date
    </select>


<!--    상위 카테고리 내에 있는 하위 카테고리 조회 -->
    <select id="findSubCategory" resultType="SubCategoryDTO">
        SELECT
            sub_category_code,
            sub_category_name
        FROM sub_category
        WHERE top_category_code = #{topCategoryCode}
    </select>
    
<!--    상위 카테고리에 해당하는 상품 전체 조회 -->
    <select id="findTopCategoryGoods" resultType="GoodsQueryDTO">
        SELECT
            g.goods_code as goodsCode,
            g.goods_name as goodsName,
            b.brand_name as brandName,
            g.goods_skintype as goodsSkintype,
            g.goods_price as goodsPrice
        FROM goods g
        JOIN brand b ON (g.brand_code = b.brand_code)
        JOIN sub_category sc ON (g.sub_category_code = sc.sub_category_code)
        WHERE sc.top_category_code = #{topCategoryCode}
        ORDER BY g.created_date
    </select>

<!--    하위 카테고리에 해당하는 상품 전체 조회 -->
    <select id="findSubCategoryGoods" resultType="GoodsQueryDTO">
        SELECT
            g.goods_code,
            g.goods_name,
            b.brand_name,
            g.goods_skintype,
            g.goods_price
        FROM goods g
        JOIN brand b ON (g.brand_code = b.brand_code)
        WHERE sub_category_code = #{subCategoryCode}
        ORDER BY created_date
    </select>

    <select id="findFilterGoodsList" resultType="GoodsQueryDTO">
        SELECT
            g.goods_code,
            g.goods_name,
            b.brand_name,
            g.goods_skintype,
            g.goods_price
        FROM goods g
        LEFT JOIN brand b ON g.brand_code = b.brand_code
        LEFT JOIN sub_category sc ON g.sub_category_code = sc.sub_category_code
        LEFT JOIN top_category tc ON sc.top_category_code = tc.top_category_code
        WHERE 1 = 1
        <if test="topCategoryCode != null and topCategoryCode != ''">
            and sc.top_category_code = #{topCategoryCode}
        </if>

        <if test="subCategoryCode != null and subCategoryCode != ''">
            and sc.sub_category_code = #{subCategoryCode}
        </if>

        <if test="minPrice != null">
            and g.goods_price  <![CDATA[]]> #{minPrice}
        </if>

        <if test="maxPrice != null">
            and g.goods_price <![CDATA[]]> #{maxPrice}
        </if>

        <if test="sort != null and sort != ''">
            ORDER BY
                <choose>
                    <when test="sort == 'price'">
                        g.goods_price
                    </when>
                    <otherwise>
                        g.goods_name
                    </otherwise>
                </choose>

            <if test="order != null and order != ''">
                <choose>
                    <when test="order == 'desc'">
                        DESC
                    </when>
                    <otherwise>
                        ASC
                    </otherwise>
                </choose>
            </if>
        </if>

        LIMIT #{offset}, #{count}
    </select>
</mapper>